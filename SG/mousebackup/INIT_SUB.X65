;****************************************************************
;*								*
;*		Init_sub.x65					*
;*		Super NES Mouse Init_sub file			*
;*		March 11, 1992          			*
;*		(c) 1992 Nintendo of America Inc.		*
;*								*
;****************************************************************
;
;===================================================================
;		CPU initialization
;
cpu_reg_init
	lda	#%00000001	; 00000000
				; | ||   |
				; | ||   -joy controller
				; | --timer enable
				; -NMI

	sta	r4200		; 
	sta	$4200

	lda	#$ff
	sta	$4201		; Programmable I/O port (input)
				; 
	lda	#0
	sta	$4202		; Default settings
	sta	$4203		; 
	sta	$4204		; 
	sta	$4205		; 
	sta	$4206		; 
	sta	$4207		; 
	sta	$4208		; 
	sta	$4209		; 
	sta	$420a		; 
	sta	$420b		; 
	sta	$420c		; 
	rts
;
;==================================================================
;		PPU initialization
;
ppu_reg_init
	lda	#%10001111	; 
	sta	r2100		; 
	sta	$2100

	lda	#%00000001	; obj 8 x 8 vramadd=2000h
	sta	r2101		; 
	sta	$2101

	lda	#$00
	sta	$2102		; OAM access address
	lda	#%10000000
	sta	$2103		; 

	lda	#%000000000	; 8 x 8 BG mode 0
	sta	r2105		; 
	sta	$2105

	lda	#$00
	sta	r2106		; 
	sta	$2106

	lda	#%00000011	; VRAM ADDR 0 - 0FFF  4 screen mode
	sta	r2107		; 
	sta	$2107
	lda	#%00010000	; VRAM ADDR 1000 - 13FF 1 screen
	sta	r2108		; 
	sta	$2108
	lda	#%00010100	; VRAM ADDR 1400 - 17FF 1 screen
	sta	r2109		; 
	sta	$2109
	lda	#%00011000	; VRAM ADDR 1800 - 1BFF 1 screen
	sta	r210a		; 
	sta	$210a

	lda	#%01010101	; 5000h BG1,2 char data area
	sta	r210b		; 
	sta	$210b
	lda	#%01010101	; 5000h BG3,4 char data area
	sta	r210c		; 
	sta	$210c

	lda	#$00
	sta	$210d		
	sta	$210d
	sta	$210e
	sta	$210e
	sta	$210f
	sta	$210f
	sta	$2110
	sta	$2110
	sta	$2111
	sta	$2111
	sta	$2112
	sta	$2112
	sta	$2113
	sta	$2113
	sta	$2114
	sta	$2114

	lda	#$00
	sta	$2115		

	sta	r211a		
	sta	$211a
	sta	r211b		
	sta	$211b
	lda	#$01
	sta	$211b
	lda	#$00
	sta	r211c		
	sta	$211c
	sta	$211c
	sta	r211d		
	sta	$211d
	sta	$211d
	sta	r211e		
	sta	$211e
	lda	#$01
	sta	$211e
	lda	#$00
	sta	r211f		
	sta	$211f
	sta	$211f
	sta	r2120		
	sta	$2120
	sta	$2120

	sta	r2123		
	sta	$2123
	sta	r2124		
	sta	$2124
	sta	r2125		
	sta	$2125

	lda	#$00
	sta	r2126		
	sta	$2126
	lda	#$01
	sta	r2127		
	sta	$2127
	lda	#$00
	sta	r2128		
	sta	$2128
	lda	#$01
	sta	r2129		
	sta	$2129

	sta	r212a		
	sta	$212a
	sta	r212b		
	sta	$212b

	lda	#%00000000
	sta	r212d		
	sta	$212d

	lda	#%00010001	
	sta	r212c		
	sta	$212c

	lda	#$00
	sta	r212e		
	sta	$212e
	sta	r212f		
	sta	$212f

	lda	#%00000000
	sta	r2130		
	sta	$2130
	lda	#%00000000
	sta	r2131		
	sta	$2131
	lda	#%11101000
	sta	r2132		
	sta	$2132

	lda	#%00000000
	sta	r2133		
	sta	$2133

	rts


;
;==================================================================
;		RAM initialization
;
ram_init
	i16
	phx
	ldx	#$1ff0
	lda	#$00
_100
	sta	$00,x
	dey
	bpl	_100
	txy
	i8			; index 8Bit mode
	plx
	rts
;
;==================================================================
;		Vram initialization
;
vram_init
	jsr	sc1_clr		; clear 0 - $0fff with $1f
	jsr	sc2_clr		; clear $1000 - $17ff with $00
	jsr	sc3_clr

	rts
;
;==================================================================
;		Other initialization

;
another_init

	jsr	color_set
	jsr	chr_load

;	jsr	bg_write

	lda	#$00
	sta	oam_adl
	lda	#%10000000
	sta	oam_adh

	rts
;
;===================================================================
;		Color setting
;
color_set
	lda	#$00
	sta	$2121		; CG-RAM address
	sta	$4310		; DMA parameter
	sta	$4315		; Transfer byte# LOW
	lda	#$02
	sta	$4316		; Transfer byte# HIGH

	lda	#$22		; 21**   2122H
	sta	$4311		; B-buss address

	lda	#<$fa00
	sta	$4312		; A-buss address LOW
	lda	#>$fa00
	sta	$4313		; A-buss address HIGH
	lda	#00
	sta	$4314		; A-buss bank

	lda	#%00000010
	sta	$420b		; DMA transfer

	rts
;
;===================================================================
;		Character Load
;
chr_load

;------------- OBJ Char

	lda	#%00000001	; 2 address write
	sta	$4310		; DMA parameter
	lda	#$18		; 2118H
	sta	$4311		; B-buss address

	lda	#<$d800		; get character from d800H
	sta	$4312		; A-buss address LOW
	lda	#>$d800
	sta	$4313		; A-buss address HIGH
	lda	#00		; Bank 0 has origin data
	sta	$4314		; A-buss bank

	lda	#<$4000
	sta	$4315		; Transfer byte LOW
	lda	#>$4000
	sta	$4316		; Transfer byte HIGH

	lda	#<$2000		; Write to $2000 VRAM 
	sta	$2116		; VRAM address LOW
	lda	#>$2000
	sta	$2117		; VRAM address HIGH

	lda	#%10000000
	sta	$2115		; VMAINC
	lda	#%00000010
	sta	$420b		; DMA transfer

;------------- BG1,2 Chr

	lda	#%00000001
	sta	$4310		; DMA parameter
	lda	#$18
	sta	$4311		; B address

	lda	#<$e000
	sta	$4312		; A buss address LOW
	lda	#>$e000
	sta	$4313		; A buss address HIGH
	lda	#00
	sta	$4314		; A buss bank

	lda	#<$1400
	sta	$4315		; Transfer byte LOW
	lda	#>$1400
	sta	$4316		; Transfer byte HIGH

	lda	#<$5000     	; $4000 bytes to $5000
	sta	$2116		; VRAM address LOW
	lda	#>$5000
	sta	$2117		; VRAM address HIGH
	lda	#%10000000
	sta	$2115		; VMAINC
	lda	#%00000010
	sta	$420b		; DMA transfer

	rts
;
;///////////////  End of file  ////////////////////////
;
	end

