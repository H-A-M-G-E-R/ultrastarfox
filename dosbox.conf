# This is the configuration file for DOSBox 0.82.1. (Please use the latest version of DOSBox)
# Lines starting with a # are comment lines and are ignored by DOSBox.
# They are used to (briefly) document the effect of each option.
# To write out ALL options, use command 'config -all' with -wc or -writeconf options.

[log]
# logfile: file where the log messages will be saved to
logfile=

[sdl]
#       fullscreen: Start dosbox directly in fullscreen. (Press ALT-Enter to go back)
#       fulldouble: Use double buffering in fullscreen. It can reduce screen flickering, but it can also result in a slow DOSBox.
#   fullresolution: What resolution to use for fullscreen: original, desktop or a fixed size (e.g. 1024x768).
#                     Using your monitor's native resolution with aspect=true might give the best results.
#                     If you end up with small window on a large screen, try an output different from surface.
# windowresolution: Scale the window to this size IF the output device supports hardware scaling.
#                     (output=surface does not!)
#           output: What video system to use for output.
#                   Possible values: surface, overlay, opengl, openglnb, ddraw.
#         autolock: Mouse will automatically lock, if you click on the screen. (Press CTRL-F10 to unlock)
#      sensitivity: Mouse sensitivity.
#      waitonerror: Wait before closing the console if dosbox has an error.
#         priority: Priority levels for dosbox. Second entry behind the comma is for when dosbox is not focused/minimized.
#                     pause is only valid for the second entry.
#                   Possible values: lowest, lower, normal, higher, highest, pause.
#       mapperfile: File used to load/save the key/event mappings from. Resetmapper only works with the default value.
fullscreen=false
fulldouble=false
fullresolution=desktop
windowresolution=original
output=ddraw
autolock=false
sensitivity=100
waitonerror=true
priority=higher,normal
mapperfile=mapper-dosbox-x.map

[dosbox]
# language: Select another language file.
#    title: Additional text to place in the title bar of the window
#  machine: The type of machine DOSBox tries to emulate.
#           Possible values: hercules, cga, cga_mono, cga_rgb, cga_composite, cga_composite2, tandy, pcjr, ega, vgaonly, svga_s3, svga_et3000, svga_et4000, svga_paradise, vesa_nolfb, vesa_oldvbe, amstrad, pc98, pc9801, pc9821, mcga.
# captures: Directory where things like wave, midi, screenshot get captured.
#      a20: A20 gate emulation mode.
#           The on/off/on_fake/off_fake options are intended for testing and debugging DOS development,
#           or to emulate obscure hardware, or to work around potential extended memory problems with DOS programs.
#           on_fake/off_fake are intended to test whether a program carries out a memory test to ensure the A20
#           gate is set as intended (as HIMEM.SYS does). If it goes by the gate bit alone, it WILL crash.
#           This parameter is also changeable from the builtin A20GATE command.
#             fast                         Emulate A20 gating by remapping the first 64KB @ 1MB boundary (fast, mainline DOSBox behavior)
#             mask                         Emulate A20 gating by masking memory I/O address (accurate)
#             off                          Lock A20 gate off (Software/OS cannot enable A20)
#             on                           Lock A20 gate on (Software/OS cannot disable A20)
#             off_fake                     Lock A20 gate off but allow bit to toggle (hope your DOS game tests the HMA!)
#             on_fake                      Lock A20 gate on but allow bit to toggle
#  memsize: Amount of memory DOSBox has in megabytes.
#             This value is best left at its default to avoid problems with some games,
#             though few games might require a higher value.
#             There is generally no speed advantage when raising this value.
#             Programs that use 286 protected mode like Windows 3.0 in Standard Mode may crash with more than 15MB.
language=
title=
machine=svga_s3
captures=capture
a20=mask
memsize=16

[render]
#  frameskip: How many frames DOSBox skips before drawing one.
#     aspect: Do aspect correction, if your output method doesn't support scaling this can slow things down!.
#      char9: Allow 9-pixel wide text mode fonts.
# doublescan: If set, doublescanned output emits two scanlines for each source line, in the
#             same manner as the actual VGA output (320x200 is rendered as 640x400 for example).
#             If clear, doublescanned output is rendered at the native source resolution (320x200 as 320x200).
#             This affects the raster PRIOR to the software or hardware scalers. Choose wisely.
#             
#     scaler: Scaler used to enlarge/enhance low resolution modes. If 'forced' is appended,
#             then the scaler will be used even if the result might not be desired.
#             Possible values: none, normal2x, normal3x, normal4x, normal5x, advmame2x, advmame3x, advinterp2x, advinterp3x, hq2x, hq3x, 2xsai, super2xsai, supereagle, tv2x, tv3x, rgb2x, rgb3x, scan2x, scan3x, hardware_none, hardware2x, hardware3x, hardware4x, hardware5x.
#    autofit: Best fits image to window
#             - Intended for output=direct3d, fullresolution=original, aspect=true
frameskip=0
aspect=false
char9=true
doublescan=true
scaler=normal2x
autofit=true

[vsync]
# vsyncmode: Synchronize vsync timing to the host display. Requires calibration within dosbox.
#            Possible values: off, on, force, host.
# vsyncrate: Vsync rate used if vsync is enabled. Ignored if vsyncmode is set to host (win32).
#            Possible values:.
vsyncmode=off
vsyncrate=75

[cpu]
#       core: CPU Core used in emulation. auto will switch to dynamic if available and appropriate.
#             WARNING: Do not use dynamic or auto setting core with Windows 95 or other preemptive
#             multitasking OSes with protected mode paging, you should use the normal core instead.
#             Possible values: auto, dynamic, normal, full, simple.
#        fpu: Enable FPU emulation
#    cputype: CPU Type used in emulation. auto emulates a 486 which tolerates Pentium instructions.
#             Possible values: auto, 8086, 8086_prefetch, 80186, 80186_prefetch, 286, 286_prefetch, 386, 386_prefetch, 486, 486_prefetch, pentium, pentium_mmx, ppro_slow.
#     cycles: Amount of instructions DOSBox tries to emulate each millisecond.
#             Setting this value too high results in sound dropouts and lags.
#             Cycles can be set in 3 ways:
#               'auto'          tries to guess what a game needs.
#                               It usually works, but can fail for certain games.
#               'fixed #number' will set a fixed amount of cycles. This is what you usually
#                               need if 'auto' fails (Example: fixed 4000).
#               'max'           will allocate as much cycles as your computer is able to
#                               handle.
#             Possible values: auto, fixed, max.
#    cycleup: Amount of cycles to decrease/increase with keycombos.(CTRL-F11/CTRL-F12)
#  cycledown: Setting it lower than 100 will be a percentage.
#    apmbios: Emulate Advanced Power Management BIOS calls
# isapnpbios: Emulate ISA Plug & Play BIOS. Enable if using DOSBox to run a PnP aware DOS program or if booting Windows 9x.
#             Do not disable if Windows 9x is configured around PnP devices, you will likely confuse it.
core=dynamic
fpu=true
cputype=ppro_slow
cycles=fixed 1280000
cycleup=10
cycledown=20
apmbios=true
isapnpbios=true

[keyboard]
#       aux: Enable emulation of the 8042 auxiliary port. PS/2 mouse emulation requires this to be enabled.
#            You should enable this if you will be running Windows ME or any other OS that does not use the BIOS to receive mouse events.
# auxdevice: Type of PS/2 mouse attached to the AUX port
#            Possible values: none, 2button, 3button, intellimouse, intellimouse45.
aux=true
auxdevice=intellimouse

[mixer]
#    nosound: Enable silent mode, sound is still emulated though.
# swapstereo: Swaps the left and right stereo channels.
#       rate: Mixer sample rate, setting any device's rate higher than this will probably lower their sound quality.
#             Possible values: 44100, 48000, 32000, 22050, 16000, 11025, 8000, 49716.
#  blocksize: Mixer block size, larger blocks might help sound stuttering but sound will also be more lagged.
#             Possible values: 1024, 2048, 4096, 8192, 512, 256.
nosound=false
swapstereo=false
rate=44100
blocksize=1024

[midi]
#     mpu401: Type of MPU-401 to emulate.
#             Possible values: intelligent, uart, none.
#    mpubase: The IO address of the MPU-401.
#             Set to 0 to use a default I/O address.
#             300h to 330h are for use with IBM PC mode.
#             C0D0h to F8D0h (in steps of 800h) are for use with NEC PC-98 mode (MPU98).
#             80D2h through 80DEh are for use with NEC PC-98 Sound Blaster 16 MPU-401 emulation.
#             If not assigned (0), 330h is the default for IBM PC and E0D0h is the default for PC-98.
#             Possible values: 0, 300, 310, 320, 330, 332, 334, 336, 340, 360, c0d0, c8d0, d0d0, d8d0, e0d0, e8d0, f0d0, f8d0, 80d2, 80d4, 80d6, 80d8, 80da, 80dc, 80de.
# mididevice: Device that will receive the MIDI data from MPU-401.
#             Possible values: default, win32, alsa, oss, coreaudio, coremidi, mt32, synth, timidity, none.
# midiconfig: Special configuration options for the device driver. This is usually the id of the device you want to use.
#               or in the case of coreaudio, you can specify a soundfont here.
#               When using a Roland MT-32 rev. 0 as midi output device, some games may require a delay in order to prevent 'buffer overflow' issues.
#               In that case, add 'delaysysex', for example: midiconfig=2 delaysysex
#               See the README/Manual for more details.
#     mpuirq: MPU-401 IRQ. -1 to automatically choose.
mpu401=intelligent
mpubase=0
mididevice=default
midiconfig=
mpuirq=-1

[sblaster]
#                       sbtype: Type of Soundblaster to emulate. gb is Gameblaster.
#                               Possible values: sb1, sb2, sbpro1, sbpro2, sb16, gb, ess688, reveal_sc400, none.
#                       sbbase: The IO address of the soundblaster.
#                               Possible values: 220, 240, 260, 280, 2a0, 2c0, 2e0, 300, d2, d4, d6, d8, da, dc, de.
#                          irq: The IRQ number of the soundblaster. Set to -1 to start DOSBox with the IRQ unassigned
#                               Possible values: 7, 5, 3, 9, 10, 11, 12.
#                          dma: The DMA number of the soundblaster. Set to -1 to start DOSBox with the IRQ unassigned
#                               Possible values: 1, 5, 0, 3, 6, 7.
#                         hdma: The High DMA number of the soundblaster. Set to -1 to start DOSBox with the IRQ unassigned
#                               Possible values: 1, 5, 0, 3, 6, 7.
#               enable speaker: Start the DOS virtual machine with the sound blaster speaker enabled.
#                               Sound Blaster Pro and older cards have a speaker disable/enable command.
#                               Normally the card boots up with the speaker disabled. If a DOS game or demo
#                               attempts to play without enabling the speaker, set this option to true to
#                               compensate. This setting has no meaning if emulating a Sound Blaster 16 card.
#                      sbmixer: Allow the soundblaster mixer to modify the DOSBox mixer.
#                      oplmode: Type of OPL emulation. On 'auto' the mode is determined by sblaster type.
#                               To emulate Adlib, set sbtype=none and oplmode=opl2. To emulate a Game Blaster, set
#                               sbtype=none and oplmode=cms
#                               Possible values: auto, cms, opl2, dualopl2, opl3, none, hardware, hardwaregb.
#                       oplemu: Provider for the OPL emulation. compat might provide better quality (see oplrate as well).
#                               Possible values: default, compat, fast, nuked, mame.
#                      oplrate: Sample rate of OPL music emulation. Use 49716 for highest quality (set the mixer rate accordingly).
#                               Possible values: 44100, 49716, 48000, 32000, 22050, 16000, 11025, 8000.
#                 hardwarebase: base address of the real hardware soundblaster:
#                               210,220,230,240,250,260,280
#                     goldplay: Enable goldplay emulation.
# blaster environment variable: Whether or not to set the BLASTER environment variable automatically at startup
sbtype=sb16
sbbase=220
irq=7
dma=1
hdma=5
enable speaker=false
sbmixer=true
oplmode=auto
oplemu=default
oplrate=44100
hardwarebase=220
goldplay=true
blaster environment variable=true

[gus]
#        gus: Enable the Gravis Ultrasound emulation.
#    gusrate: Sample rate of Ultrasound emulation.
#             Possible values: 44100, 48000, 32000, 22050, 16000, 11025, 8000, 49716.
# gusmemsize: Amount of RAM on the Gravis Ultrasound in KB. Set to -1 for default.
#    gusbase: The IO base address of the Gravis Ultrasound.
#             Possible values: 240, 220, 260, 280, 2a0, 2c0, 2e0, 300, 210, 230, 250.
#     gusirq: The IRQ number of the Gravis Ultrasound.
#             Possible values: 5, 3, 7, 9, 10, 11, 12.
#     gusdma: The DMA channel of the Gravis Ultrasound.
#             Possible values: 3, 0, 1, 5, 6, 7.
#    gustype: Type of Gravis Ultrasound to emulate.
#             classic             Original Gravis Ultrasound chipset
#             classic37           Original Gravis Ultrasound with ICS Mixer (rev 3.7)
#             max                 Gravis Ultrasound MAX emulation (with CS4231 codec)
#             interwave           Gravis Ultrasound Plug & Play (interwave)
#             Possible values: classic, classic37, max, interwave.
#   ultradir: Path to Ultrasound directory. In this directory
#             there should be a MIDI directory that contains
#             the patch files for GUS playback. Patch sets used
#             with Timidity should work fine.
gus=false
gusrate=44100
gusmemsize=-1
gusbase=240
gusirq=5
gusdma=3
gustype=classic
ultradir=C:\ULTRASND

[innova]
#     innova: Enable the Innovation SSI-2001 emulation.
# samplerate: Sample rate of Innovation SSI-2001 emulation
#             Possible values: 44100, 48000, 32000, 22050, 16000, 11025, 8000, 49716.
#    sidbase: SID base port (typically 280h).
#             Possible values: 240, 220, 260, 280, 2a0, 2c0, 2e0, 300.
#    quality: Set SID emulation quality level (0 to 3).
#             Possible values: 0, 1, 2, 3.
innova=false
samplerate=22050
sidbase=280
quality=0

[speaker]
#    pcspeaker: Enable PC-Speaker emulation.
#       pcrate: Sample rate of the PC-Speaker sound generation.
#               Possible values: 44100, 48000, 32000, 22050, 16000, 11025, 8000, 49716.
#        tandy: Enable Tandy Sound System emulation. For 'auto', emulation is present only if machine is set to 'tandy'.
#               Possible values: auto, on, off.
#    tandyrate: Sample rate of the Tandy 3-Voice generation.
#               Possible values: 44100, 48000, 32000, 22050, 16000, 11025, 8000, 49716.
#       disney: Enable Disney Sound Source emulation. (Covox Voice Master and Speech Thing compatible).
#     ps1audio: Enable PS1 audio emulation.
#               Possible values: on, off.
# ps1audiorate: Sample rate of the PS1 audio emulation.
#               Possible values: 44100, 48000, 32000, 22050, 16000, 11025, 8000, 49716.
pcspeaker=true
pcrate=44100
tandy=auto
tandyrate=44100
disney=false
ps1audio=off
ps1audiorate=22050

[joystick]
# joysticktype: Type of joystick to emulate: auto (default), none,
#               2axis (supports two joysticks),
#               4axis (supports one joystick, first joystick used),
#               4axis_2 (supports one joystick, second joystick used),
#               fcs (Thrustmaster), ch (CH Flightstick).
#               none disables joystick emulation.
#               auto chooses emulation depending on real joystick(s).
#               (Remember to reset dosbox's mapperfile if you saved it earlier)
#               Possible values: auto, 2axis, 4axis, 4axis_2, fcs, ch, none.
#        timed: enable timed intervals for axis. Experiment with this option, if your joystick drifts (away).
#     autofire: continuously fires as long as you keep the button pressed.
#       swap34: swap the 3rd and the 4th axis. can be useful for certain joysticks.
#   buttonwrap: enable button wrapping at the number of emulated buttons.
joysticktype=auto
timed=true
autofire=false
swap34=false
buttonwrap=false

[serial]
# serial1: set type of device connected to com port.
#          Can be disabled, dummy, modem, nullmodem, directserial.
#          Additional parameters must be in the same line in the form of
#          parameter:value. Parameter for all types is irq (optional).
#          for directserial: realport (required), rxdelay (optional).
#                           (realport:COM1 realport:ttyS0).
#          for modem: listenport (optional).
#          for nullmodem: server, rxdelay, txdelay, telnet, usedtr,
#                         transparent, port, inhsocket, nonlocal (all optional).
#                         connections are limited to localhost unless you specify nonlocal:1
#          Example: serial1=modem listenport:5000
#          Possible values: dummy, disabled, modem, nullmodem, serialmouse, directserial, log.
# serial2: see serial1
#          Possible values: dummy, disabled, modem, nullmodem, serialmouse, directserial, log.
# serial3: see serial1
#          Possible values: dummy, disabled, modem, nullmodem, serialmouse, directserial, log.
# serial4: see serial1
#          Possible values: dummy, disabled, modem, nullmodem, serialmouse, directserial, log.
serial1=dummy
serial2=dummy
serial3=disabled
serial4=disabled

[parallel]
# parallel1: parallel1-3 -- set type of device connected to lpt port.
#            Can be:
#            	reallpt (direct parallel port passthrough),
#            	file (records data to a file or passes it to a device),
#            	printer (virtual dot-matrix printer, see [printer] section)
#                   disney (attach Disney Sound Source emulation to this port)
#            Additional parameters must be in the same line in the form of
#            parameter:value.
#              for reallpt:
#              Windows:
#                realbase (the base address of your real parallel port).
#                  Default: 378
#                ecpbase (base address of the ECP registers, optional).
#              Linux: realport (the parallel port device i.e. /dev/parport0).
#              for file: 
#                dev:<devname> (i.e. dev:lpt1) to forward data to a device,
#                or append:<file> appends data to the specified file.
#                Without the above parameters data is written to files in the capture dir.
#                Additional parameters: timeout:<milliseconds> = how long to wait before
#                closing the file on inactivity (default:500), addFF to add a formfeed when
#                closing, addLF to add a linefeed if the app doesn't, cp:<codepage number>
#                to perform codepage translation, i.e. cp:437
#              for printer:
#                printer still has it's own configuration section above.
# parallel2: see parallel1
# parallel3: see parallel1
#    dongle: Enable dongle
parallel1=printer
parallel2=disabled
parallel3=disabled
dongle=false

[dos]
#              xms: Enable XMS support.
#      xms handles: Number of XMS handles available for the DOS environment, or 0 to use a reasonable default
#              hma: Report through XMS that HMA exists (not necessarily available)
#            share: Report SHARE.EXE as resident. Does not actually emulate SHARE functions.
# minimum mcb free: Minimum free segment value to leave free. At startup, the DOS kernel will allocate memory
#                   up to this point. This can be used to deal with EXEPACK issues or DOS programs that cannot
#                   be loaded too low in memory. This differs from 'minimum mcb segment' in that this affects
#                   the lowest free block instead of the starting point of the mcb chain.
#             dosv: Enable DOS/V emulation and specify which version to emulate. This option is intended for
#                   use with games or software originating from Asia that use the double byte character set
#                   encodings and the DOS/V extensions to display Japanese, Chinese, or Korean text.
#                   Note that enabling DOS/V replaces 80x25 text mode (INT 10h mode 3) with a EGA/VGA graphics
#                   mode that emulates text mode to display the characters and may be incompatible with non-Asian
#                   software that assumes direct access to the text mode via segment 0xB800.
#                   WARNING: This option is very experimental at this time.
#                   Possible values: off, japanese, chinese, korean.
#              ems: Enable EMS support. The default (=true) provides the best
#                   compatibility but certain applications may run better with
#                   other choices, or require EMS support to be disabled (=false)
#                   to work at all.
#                   Possible values: true, emsboard, emm386, false.
#              umb: Enable UMB support.
#              ver: Set DOS version. Specify as major.minor format. A single number is treated as the major version (LFN patch compat). Common settings are:
#                   auto (or unset)                  Pick a DOS kernel version automatically
#                   3.3                              MS-DOS 3.3 emulation (not tested!)
#                   5.0                              MS-DOS 5.0 emulation (recommended for DOS gaming)
#                   6.22                             MS-DOS 6.22 emulation
#                   7.0                              Windows 95 (pure DOS mode) emulation
#                   
#        automount: Enable automatic mount.
#            int33: Enable INT 33H (mouse) support.
#   keyboardlayout: Language code of the keyboard layout (or none).
#             dbcs: Enable DBCS table.
#                   CAUTION: Some software will crash without the DBCS table, including the Open Watcom installer.
#                   
xms=true
xms handles=0
hma=true
share=true
minimum mcb free=0
dosv=off
ems=true
umb=true
ver=
automount=true
int33=true
keyboardlayout=auto
dbcs=true

[ipx]
# ipx: Enable ipx over UDP/IP emulation.
ipx=false

[ne2000]
#  ne2000: Enable Ethernet passthrough. Requires [Win]Pcap.
# nicbase: The base address of the NE2000 board.
#  nicirq: The interrupt it uses. Note serial2 uses IRQ3 as default.
ne2000=false
nicbase=300
nicirq=3

[fdc, primary]
# enable: Enable floppy controller interface
#    pnp: List floppy controller in ISA PnP BIOS enumeration
#   mode: Floppy controller mode. What the controller acts like.
#           ps2                          PS/2 mode (most common)
#           ps2_model30                  PS/2 model 30
#           at                           AT mode
#           xt                           PC/XT mode
enable=false
pnp=true
mode=ps2

[ide, primary]
# enable: Enable IDE interface
#    pnp: List IDE device in ISA PnP BIOS enumeration
enable=true
pnp=true

[ide, secondary]
enable=true
pnp=true

[ide, tertiary]
enable=false
pnp=true

[ide, quaternary]
enable=false
pnp=true

[ide, quinternary]
enable=false
pnp=true

[ide, sexternary]
enable=false
pnp=true

[ide, septernary]
enable=false
pnp=true

[ide, octernary]
enable=false
pnp=true

[autoexec]
# Lines in this section will be run at startup.
# You can put your MOUNT lines here.
cls

