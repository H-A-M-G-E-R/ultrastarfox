Quick guide to the ArgBug V0.20Z SNES Debugger
----------------------------------------------


General Commands
----------------

SHIFT and cursor keys moves between windows.

PG UP, PG DN, CURSOR UP, CURSOR DOWN, HOME & END work as you might
	expect!!

F1,F2	move to,move edge ala Brief.

F3,F4	create/delete windows ala Brief.

SHIFT and F1..F10 plays back the key macro that has been recorded
	for the particular function key.

CTRL and F1..F10 starts recording of a keyboard macro relating to
	the particular function key. Recording stops either when
	the macro buffer is full (64 key presses) or when the user
	hits CTRL-ESCAPE.

ALT-F10 allows the user to configure the screen colours, the back
	channel communications setup and the printer options etc.

ALT-F	freezes/unfreezes the current window allowing comparisons of
	registers/memory before and after some code has been executed.
	NOTE: ALT-F prevents most window commands from that window from
	working until the window is unfrozen again.

ALT-G	in a window allows you to select a new window start address.

ALT-Q	allows you to evaluate an expression (see later for more
	information).

ALT-V	displays the program version number.

ALT-W	cycles the window forwards through the window types.

CTRL-W	cycles the window forwards through the window types.

ALT-X	exit debugger.

ALT-Y	purges the SNES RAM/VRAM with a user specified byte value and
	then resets the SNES.

ALT-Z	drop to DOS shell.



65816 Register Window Actions
-----------------------------

ALT-E	allows you to edit the registers using hex input at the cursor.

ALT-S	allows you to set the currently highlighted register to the
	result of an expression.



65816 Disassembly Window Actions
--------------------------------

F5	Runs the SNES program until the next break point is hit.

F8	Single steps one 65816 instruction.

F10	Call steps one 65816 instruction (jumps over subroutine
	calls).

ALT-B	toggles BREAK POINT display.

ALT-C	toggles HEX CODE display.

ALT-E	allows you to edit 65816 code e.g. type in assembler
	instructions, then hit RETURN to assemble it and finally
	hit CTRL-RETURN to commit the changes to the SNES memory or
	ESCAPE to abort.
	NOTE: you must hit RETURN to assemble the line, CTRL-RETURN
	does not assemble the current line, so to assemble a single
	line of code: type in the instruction, hit RETURN and finally
	hit CTRL-RETURN to commit the changes to the SNES's memory.

ALT-G	allows you to set a new window start address (SNES memory
	address).

CTRL-G	sets the window address to the address pointed to by the
	65816 instruction under the cursor (only if the instruction)
	is a JMP/JSR/BRA/JSL/JML/BRL instruction.

ALT-H	takes the cursor to the current SNES PC.

ALT-L	allows the user to set an expression for the base address of 
	the current window e.g. if you lock the window to the
	expression $8000+@X after each instruction is executed the
	window base address will be altered to match the expression.
	This is useful for following a piece of code as it accesses
	data structures.

CTRL-L	allows the user to remove the Window Lock from the current
	window.

CTRL-ALT-L allows the user to view the Window Lock expression on the
	current window.

ALT-O	allows the user to output a 65816 disassembly listing to a
	disk file.

CTRL-O	allows the user to output a 65816 disassembly listing to the
	specified printer (printer options are on the Configuration
	Screen, popped up by pressing ALT-F10).

ALT-P	toggles a break point at the cursor position.

ALT-R	toggles the register integrity check. When enabled, this
	checks, when a break point is hit, to see if the 8/16 bit
	(ACC & X, Y) flag settings match the way the SNES program
	was assembled e.g. If at a certain address the index
	registers are supposed to be in 16 bit mode and the flags
	are set so that they are in 8 bit mode, the debugger will
	print up a warning message and will make a sound.

ALT-S	toggles SYMBOLS display.

ALT-T	toggles TIMINGS display.



65816 Break Point Window Actions
--------------------------------

ALT-A	add a break point in the break point window.

ALT-C	clears all defined 65816 break points.

ALT-D	delete a break point in the break point window.

ALT-E	edit a break point in the break point window. When doing this
	use CURSOR UP and CURSOR DOWN to alter the qualifier type
	(types are register or memory (byte/word) qualification).

ALT-R	reset break point down count in the break point window.

ALT-T	toggle break point disable/enable in the break point window.



SUPER F/X Register Window Actions
---------------------------------

ALT-E	allows you to edit the registers using hex input at the cursor.

ALT-S	allows you to set the currently highlighted register to the
	result of an expression.



SUPER F/X Disassembly Window Actions
------------------------------------

ALT-C	toggles HEX CODE display.

ALT-E	allows you to edit SUPER F/X code e.g. type in assembler
	instructions, then hit RETURN to assemble it and finally
	hit CTRL-RETURN to commit the changes to the SNES memory or
	ESCAPE to abort.

ALT-G	allows you to set a new window start address (SNES memory
	address).

ALT-L	allows the user to set an expression for the base address of 
	the current window e.g. if you lock the window to the
	expression $1BC00+@SFXPC+@R10 after each instruction is
	executed the window base address will be altered to match
	the expression. This is useful for following a piece of code
	as it accesses data structures.

CTRL-L	allows the user to remove the Window Lock from the current
	window.

CTRL-ALT-L allows the user to view the Window Lock expression on the
	current window.

ALT-O	allows the user to output a Super FX disassembly listing to a
	disk file.

CTRL-O	allows the user to output a Super FX disassembly listing to the
	specified printer (printer options are on the Configuration
	Screen, popped up by pressing ALT-F10).

ALT-S	toggles SYMBOLS display.



Memory Hex Long Word Window Actions
-----------------------------------

ALT-C	allows the user to copy a block of SNES memory to another
	address.

ALT-E	allows you to edit SNES memory e.g. move cursor around,
	type in hex data and then hit CTRL-RETURN to commit the
	changes to the SNES memory or ESCAPE to abort.

ALT-G	allows you to set a new window start address (SNES memory
	address).

ALT-I	allows the user to fill a block of SNES memory with a
	specified byte value.

ALT-L	allows the user to set an expression for the base address of 
	the current window e.g. if you lock the window to the
	expression @DBR*$10000+@X after each instruction is executed
	the window base address will be altered to match the
	expression. This is useful for following a piece of code as it
	accesses data structures.

CTRL-L	allows the user to remove the Window Lock from the current
	window.

CTRL-ALT-L allows the user to view the Window Lock expression on the
	current window.

ALT-O	allows the user to output a hex data listing to a disk file.

CTRL-O	allows the user to output a hex data listing to the specified
	printer (printer options are on the Configuration Screen,
	popped up by pressing ALT-F10).

ALT-P	allows the user to compare two blocks of SNES memory with
	each other.

ALT-S	allows the user to search a block of SNES memory for a
	specified string of hex bytes.

CTRL-S	allows the user to search a block of SNES memory for a
	specified text string.

ALT-U	allows the user to upload a block of SNES memory to a disk
	file.

CTRL-U	allows the user to download a disk file to the SNES's memory.



Memory Hex 24 Bit Ptr Window Actions
------------------------------------

ALT-C	allows the user to copy a block of SNES memory to another
	address.

ALT-E	allows you to edit SNES memory e.g. move cursor around,
	type in hex data and then hit CTRL-RETURN to commit the
	changes to the SNES memory or ESCAPE to abort.

ALT-G	allows you to set a new window start address (SNES memory
	address).

ALT-I	allows the user to fill a block of SNES memory with a
	specified byte value.

ALT-L	allows the user to set an expression for the base address of 
	the current window e.g. if you lock the window to the
	expression @DBR*$10000+@X after each instruction is executed
	the window base address will be altered to match the
	expression. This is useful for following a piece of code as it
	accesses data structures.

CTRL-L	allows the user to remove the Window Lock from the current
	window.

CTRL-ALT-L allows the user to view the Window Lock expression on the
	current window.

ALT-O	allows the user to output a hex data listing to a disk file.

CTRL-O	allows the user to output a hex data listing to the specified
	printer (printer options are on the Configuration Screen,
	popped up by pressing ALT-F10).

ALT-P	allows the user to compare two blocks of SNES memory with
	each other.

ALT-S	allows the user to search a block of SNES memory for a
	specified string of hex bytes.

CTRL-S	allows the user to search a block of SNES memory for a
	specified text string.

ALT-U	allows the user to upload a block of SNES memory to a disk
	file.

CTRL-U	allows the user to download a disk file to the SNES's memory.



Memory Hex Word Window Actions
------------------------------

ALT-C	allows the user to copy a block of SNES memory to another
	address.

ALT-E	allows you to edit SNES memory e.g. move cursor around,
	type in hex data and then hit CTRL-RETURN to commit the
	changes to the SNES memory or ESCAPE to abort.

ALT-G	allows you to set a new window start address (SNES memory
	address).

ALT-I	allows the user to fill a block of SNES memory with a
	specified byte value.

ALT-L	allows the user to set an expression for the base address of 
	the current window e.g. if you lock the window to the
	expression @DBR*$10000+@X after each instruction is executed
	the window base address will be altered to match the
	expression. This is useful for following a piece of code as it
	accesses data structures.

CTRL-L	allows the user to remove the Window Lock from the current
	window.

CTRL-ALT-L allows the user to view the Window Lock expression on the
	current window.

ALT-O	allows the user to output a hex data listing to a disk file.

CTRL-O	allows the user to output a hex data listing to the specified
	printer (printer options are on the Configuration Screen,
	popped up by pressing ALT-F10).

ALT-P	allows the user to compare two blocks of SNES memory with
	each other.

ALT-S	allows the user to search a block of SNES memory for a
	specified string of hex bytes.

CTRL-S	allows the user to search a block of SNES memory for a
	specified text string.

ALT-U	allows the user to upload a block of SNES memory to a disk
	file.

CTRL-U	allows the user to download a disk file to the SNES's memory.



Memory Hex Byte Window Actions
------------------------------

ALT-C	allows the user to copy a block of SNES memory to another
	address.

ALT-E	allows you to edit SNES memory e.g. move cursor around,
	type in hex data and then hit CTRL-RETURN to commit the
	changes to the SNES memory or ESCAPE to abort.

ALT-G	allows you to set a new window start address (SNES memory
	address).

ALT-I	allows the user to fill a block of SNES memory with a
	specified byte value.

ALT-L	allows the user to set an expression for the base address of 
	the current window e.g. if you lock the window to the
	expression @DBR*$10000+@X after each instruction is executed
	the window base address will be altered to match the
	expression. This is useful for following a piece of code as it
	accesses data structures.

CTRL-L	allows the user to remove the Window Lock from the current
	window.

CTRL-ALT-L allows the user to view the Window Lock expression on the
	current window.

ALT-O	allows the user to output a hex data listing to a disk file.

CTRL-O	allows the user to output a hex data listing to the specified
	printer (printer options are on the Configuration Screen,
	popped up by pressing ALT-F10).

ALT-P	allows the user to compare two blocks of SNES memory with
	each other.

ALT-S	allows the user to search a block of SNES memory for a
	specified string of hex bytes.

CTRL-S	allows the user to search a block of SNES memory for a
	specified text string.

ALT-U	allows the user to upload a block of SNES memory to a disk
	file.

CTRL-U	allows the user to download a disk file to the SNES's memory.



Memory Hex Byte & ASCII Window Actions
--------------------------------------

ALT-C	allows the user to copy a block of SNES memory to another
	address.

ALT-E	allows you to edit SNES memory e.g. move cursor around,
	type in hex data or ASCII if the cursor is over the ASCII
	section of the display and then hit CTRL-RETURN to commit
	the changes to the SNES memory or ESCAPE to abort.

TAB	when editing memory toggles the cursor between hex data entry
	and ASCII data entry.

ALT-G	allows you to set a new window start address (SNES memory
	address).

ALT-I	allows the user to fill a block of SNES memory with a
	specified byte value.

ALT-L	allows the user to set an expression for the base address of 
	the current window e.g. if you lock the window to the
	expression @DBR*$10000+@X after each instruction is executed
	the window base address will be altered to match the
	expression. This is useful for following a piece of code as it
	accesses data structures.

CTRL-L	allows the user to remove the Window Lock from the current
	window.

CTRL-ALT-L allows the user to view the Window Lock expression on the
	current window.

ALT-O	allows the user to output a hex data listing to a disk file.

CTRL-O	allows the user to output a hex data listing to the specified
	printer (printer options are on the Configuration Screen,
	popped up by pressing ALT-F10).

ALT-P	allows the user to compare two blocks of SNES memory with
	each other.

ALT-S	allows the user to search a block of SNES memory for a
	specified string of hex bytes.

CTRL-S	allows the user to search a block of SNES memory for a
	specified text string.

ALT-U	allows the user to upload a block of SNES memory to a disk
	file.

CTRL-U	allows the user to download a disk file to the SNES's memory.



32 Bit Symbol Display Window Actions
------------------------------------

ALT-S	searches for a given symbol either by value or by name
	depending on the current sort display method.

ALT-T	toggles the display sort mode between alphabetical and numerical
	sorting.



File Browser Window Actions
---------------------------

ALT-H	toggles the file display mode between hex data and ASCII text.

ALT-R	allows you to specify the file to read in for browsing.
	NOTE: When entering the filename on the command line TAB can be
	used to search for filenames in a similar fashion to Brief.

ALT-T	allows you to set the text display TAB size between 1 and 8
	spaces.



Debug Hook Window Actions
-------------------------

ALT-C	clears the debug hook screen.

	NOTE: debug hooks are software commands built into the
	debugger so that a SNES program can send information to the
	PC automatically (without user interaction). These can be
	used for printing diagnostic data or for creating data files
	for example containing a sequence of recorded joypad data for
	a game demo sequence. The commands are all sent to the PC
	using the COP #nn 65816 instruction. The available commands
	are as follows:

	COP #0	- Print hex byte held in ACC.
	COP #1	- Print hex word held in ACC.
	COP #2	- Print hex long held in ACC:X (ACC is high word).

	COP #3	- Print ASCII character held in ACC.
	COP #4	- Print NEWLINE character.
	COP #5	- Print ASCII string pointed to by ACC:X
		  (ACC low byte = data bank).

	COP #6	- Wait for SPACE bar to be pressed on PC keyboard.

	COP #7	- Open output file on PC, ACC:X points to NULL
		  terminated filename.
	COP #8	- Close output file on the PC.
	COP #9	- Write byte held in ACC to output file.
	COP #A	- Write word held in ACC to output file.
	COP #B	- Write a block of memory to output file
		  (ACC:X = address, Y = length).

	NOTE: all registers are assumed to be in 16 bit mode when a
	hook command is performed.



Other Information
-----------------

Mouse control is fully working for positioning cursor and using the
scroll bars. Additionally if you click again on the current cursor
line in a 65816 Disassembly window you will toggle a Break Point at
that address.

When entering an expression on the command line TAB can be used to
search for symbols in a similar fashion to Brief. Also Super FX and
65816 registers can be used in expressions using the @ prefix as
follows:

	@A		- 65816 accumulator.
	@X		- 65816 X index register.
	@Y		- 65816 Y index register.
	@DP		- 65816 direct page register.
	@DBR		- 65816 data bank register.
	@FLAGS		- 65816 flags.
	@PC		- 65816 PC.
	@SP		- 65816 stack register.

	@R0		- Super FX register R0.
	@R1		- Super FX register R1.
	@R2		- Super FX register R2.
	@R3		- Super FX register R3.
	@R4		- Super FX register R4.
	@R5		- Super FX register R5.
	@R6		- Super FX register R6.
	@R7		- Super FX register R7.
	@R8		- Super FX register R8.
	@R9		- Super FX register R9.
	@R10		- Super FX register R10.
	@R11		- Super FX register R11.
	@R12		- Super FX register R12.
	@R13		- Super FX register R13.
	@R14		- Super FX register R14.
	@R15		- Super FX register R15.
	@SFXPC		- Super FX register R15.
	@SFXFLAGS	- Super FX flags.

e.g. the expression @PC+@X returns the sum of the 65816 accumulator
and the X index register.



Configuration Window
--------------------

This window (popped up by pressing ALT-F10) allows the user to
configure the debugger system. It allows the selection of all the
screen colours and more importantly the configuration of the Back
Channel and the ADS hardware. The user can also configure the printer
setup for when the listing output commands are used.

The hardware configuration is as follows:

1) Back Channel ROM offset: this is the offset within the ROM for the
location of the back channel communications (note: this address
should be on a 512 byte boundary). Ideally this should be located out
of the range of your ROM data i.e. if you are writing a 4MBit game
the Back Channel ROM offset should be set to at least $80000 and for
an 8MBit game it should be at least $100000. NOTE: normally the Back
Channel ROM offset can be anywhere between 0 and $1FFE00 except when
using a SuperChild card when it can range between 0 and $FFE00. Also
remember that ROM offsets do not directly relate to SNES addresses,
it depends on whether your ROM uses 32k or 64k banks.

2) Back Channel ADS board: this allows the user to have a second
board in the ADS system purely to supply the Back Channel
communications. This is useful if you are developing an 8MBit Super
FX game using a SuperChild ADS board.

3) Debug ROM ON/OFF offset: this is another ROM offset and specifies
the position of the ON/OFF switch for the Debug ROM, like the Baack
Channel ROM offset it should be located, wherever possible, beyond
the end of you SNES program. This offset needs to be set on an even
boundary (bit 0 of offset is set to 0). A typical address on a
SuperChild card would be $FFFFE and $1FFFFE on a RamChild1.
NOTE: when using a second ADS board for the Back Channel the Debug
ROM ON/OFF offset still relates to the primary ADS board that your
program is running on.

4) Back Channel ROM base address: this is the base address of the ADS
board ROM that your code is running in. Normally this address will be
set to $8000 (even if your game runs in fast ROM mode).

5) SNES Scratch RAM address: the debugger needs approximately 600
bytes (maximum) of RAM somewhere in the SNES for variable storage
etc. If your system has battery backed RAM then it is advisable to
set the address there (on an ADS board this address could be in the
range $700000-$71F000) otherwise allow some space in either bank $7E
or bank $7F for this.

6) Back Channel ROM bank size: this specifies the ROM bank size (in
Kilobytes) of the ADS board ROM you are using. Normally this value
will be set to 32.


